# Prompt the user to enter the source directory path
$sourceDirectory = Read-Host "Please enter the source directory containing .cklb files"

# Validate that the source directory exists
if (-Not (Test-Path -Path $sourceDirectory)) {
    Write-Host "The specified source directory does not exist. Please check the path and try again."
    exit
}

# Define the destination base directory
$baseDirectory = "C:\STIGs"

# Get today's date and create a new folder under C:\STIGs
$todayDate = (Get-Date).ToString("yyyy-MM-dd")
$reviewDirectory = Join-Path -Path $baseDirectory -ChildPath $todayDate

# Create the review directory if it doesnâ€™t exist
if (-Not (Test-Path -Path $reviewDirectory)) { New-Item -ItemType Directory -Path $reviewDirectory }

# Define Final Review and Supplemental Review folders
$finalReviewDir = Join-Path -Path $reviewDirectory "Final Review"
$supplementalReviewDir = Join-Path -Path $reviewDirectory "Supplemental Review"

# Create these directories if they don't exist
if (-Not (Test-Path -Path $finalReviewDir)) { New-Item -ItemType Directory -Path $finalReviewDir }
if (-Not (Test-Path -Path $supplementalReviewDir)) { New-Item -ItemType Directory -Path $supplementalReviewDir }

# Retrieve all .cklb files within subdirectories of the source directory
$cklbFiles = Get-ChildItem -Path $sourceDirectory -Filter "*.cklb" -Recurse

# Check if there are no .cklb files
if ($cklbFiles.Count -eq 0) {
    Write-Host "No .cklb files found in the specified source directory."
    exit
}

# Track folders to be copied
$foldersToCopy = @{}

# Process each .cklb file
foreach ($file in $cklbFiles) {
    $content = Get-Content -Path $file.FullName -Raw | ConvertFrom-Json
    $allFindingsVerified = $true

    foreach ($stig in $content.stigs) {
        foreach ($rule in $stig.rules) {
            if ($rule.status -eq "open" -or $rule.status -eq "not_reviewed") {
                # Check if comments contain 'verified by' or 'set by'
                if ($rule.comments -notmatch "verified by|set by") {
                    $allFindingsVerified = $false
                }
            }
        }
    }

    $folderPath = Split-Path -Path $file.FullName -Parent

    # Assign folder to review category
    if ($allFindingsVerified) {
        $foldersToCopy[$folderPath] = $finalReviewDir
    } else {
        $foldersToCopy[$folderPath] = $supplementalReviewDir
    }
}

# Copy identified folders into their respective review directories
foreach ($folder in $foldersToCopy.Keys) {
    $destination = $foldersToCopy[$folder]
    $folderName = Split-Path -Path $folder -Leaf
    $destPath = Join-Path -Path $destination -ChildPath $folderName

    if (-Not (Test-Path -Path $destPath)) {
        robocopy "$folder" "$destPath" /E /COPYALL /R:3 /W:3
        Write-Host "Copied '$folder' to '$destination'"
    }
}

Write-Host "Folder classification completed successfully! STIGs were moved from '$sourceDirectory' to '$reviewDirectory'."
